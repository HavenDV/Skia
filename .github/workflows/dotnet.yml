name: Build, test and publish
on:
  push:
    branches:
      - main

jobs:
  build-test-non-windows:
    strategy:
      matrix:
        os: [macos, ubuntu, windows]
        dotnet-version: [6.0.x] #, 7.0.x, 8.0.x
        dotnet-quality: [ga] #preview, 
        source: [local] #nuget, 
        build: ["dotnet build"]
        include:
          - os: windows
            build: "msbuild /restore"
    name: ${{ matrix.os }}/${{ matrix.dotnet-version }}-${{ matrix.dotnet-quality }}/${{ matrix.source }}/${{ matrix.build }}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: "Checkout"
        if: matrix.source == 'local'
        uses: actions/checkout@v4

      - name: "Setup dotnet"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          dotnet-quality: ${{ matrix.dotnet-quality }}
          
      - name: "Setup MSBuild"
        if: startsWith(matrix.build, 'msbuild')
        uses: microsoft/setup-msbuild@v1.1
          
      - name: "Build local packages"
        if: matrix.source == 'local'
        run: dotnet build
         
      - name: "Download workload-install on Windows"
        if: matrix.os == 'windows'
        run: Invoke-WebRequest 'https://raw.githubusercontent.com/HavenDV/Skia/main/scripts/workload-install.ps1' -OutFile 'workload-install.ps1'
      - name: "Install workload from local packages on Windows"
        if: matrix.source == 'local' && matrix.os == 'windows'
        run: ./workload-install.ps1 -s out/nuget-unsigned
      - name: "Install workload from NuGet on Windows"
        if: matrix.source == 'nuget' && matrix.os == 'windows'
        run: ./workload-install.ps1
        
      - name: "Install workload from local packages on Linux/macOS"
        if: matrix.source == 'local'' && matrix.os != 'windows'
        run: curl -sSL https://raw.githubusercontent.com/HavenDV/Skia/main/scripts/workload-install.sh | bash -s -- -s out/nuget-unsigned
      - name: "Install workload from NuGet on Linux/macOS"
        if: matrix.source == 'nuget'' && matrix.os != 'windows'
        run: curl -sSL https://raw.githubusercontent.com/HavenDV/Skia/main/scripts/workload-install.sh | sudo bash
        
      - name: "Create new project from skia template"
        run: dotnet new skia --output test
      - name: "Build new project using ${{ matrix.build }}"
        run: ${{ matrix.build }} test
      
  build-test-publish:
    name: Build, test and publish
    uses: HavenDV/workflows/.github/workflows/dotnet_build-test-publish.yml@main
    with:
      generate-build-number: false
      conventional-commits-publish-conditions: false
      enable-caching: false
      additional-command: sudo dotnet build
        src/tasks/Tasks
        /t:TestWorkload
    secrets:
      nuget-key: ${{ secrets.NUGET_KEY }}